name: Deploy preview environment

on:
  pull_request:
    types: [labeled, opened, synchronize]

jobs:
  configure:
    if: |
      (github.event.action == 'labeled' && github.event.label.name == 'preview') ||
      (github.event.action != 'labeled' && contains(github.event.pull_request.labels.*.name, 'preview'))

    outputs:
      env: ${{ steps.result.outputs.value }}

    name: Configure the temporary env

    runs-on: ubuntu-latest

    environment: qa

    permissions:
      deployments: write
      id-token: write

    steps:
      - uses: actions/checkout@v4
      - id: result
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ENV_NAME=${{ github.event.pull_request.number }}-tmp
          gh api --method PUT /repos/${{ github.repository }}/environments/$ENV_NAME
          gh variable set AWS_ACCOUNT ${{ secrets.AWS_ACCOUNT }} --environment $ENV_NAME
          gh variable set AWS_REGION ${{ secrets.AWS_REGION }} --environment $ENV_NAME
          # set all the other variables here vars
          echo ${{ vars }} | jq -r 'to_entries[] | .key + "=" + .value' | while read line; do
            gh variable set $line --environment $ENV_NAME
          done
          # override the domain variable
          gh variable set DOMAIN $ENV_NAME-${{ vars.DOMAIN }} --environment $ENV_NAME
          echo "value=$ENV_NAME" >> $GITHUB_OUTPUT
          echo "RESULT >>>"
          echo "ENV_NAME=$ENV_NAME"
          echo gh variable list --environment $ENV_NAME

  infra:
    name: Deploy the infrastructure
    concurrency: cdk
    environment:
      name: ${{ needs.configure.outputs.env }}

    runs-on: ubuntu-latest

    needs:
      - configure

    outputs:
      folder: ${{ steps.deploy-infra.outputs.folder }}
      bucket: ${{ steps.deploy-infra.outputs.bucket }}
      id: ${{ steps.deploy-infra.outputs.id }}
      url: ${{ steps.deploy-infra.outputs.url }}

    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v4
      - id: deploy-infra
        uses: ./.github/actions/deploy-infra
        with:
          environment: tmp
          aws-account: ${{ secrets.AWS_ACCOUNT }}
          aws-region: ${{ secrets.AWS_REGION }}
          vars: ${{ toJson(vars) }}
          pr-number: ${{ github.event.pull_request.number }}

  build:
    name: Build the application
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/build-app

  deploy:
    name: Deploy the application
    concurrency: deploy
    environment:
      name: ${{ needs.configure.outputs.env }}
      url: ${{ needs.infra.outputs.url }}

    runs-on: ubuntu-latest

    needs:
      - configure
      - infra
      - build

    permissions:
      deployments: write
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/deploy-app
        with:
          aws-account: ${{ secrets.AWS_ACCOUNT }}
          aws-region: ${{ secrets.AWS_REGION }}
          folder: ${{ needs.infra.outputs.folder }}
          bucket: ${{ needs.infra.outputs.bucket }}
          id: ${{ needs.infra.outputs.id }}
          pr-number: ${{ github.event.pull_request.number }}
